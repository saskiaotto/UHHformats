---
title: "Document title"   
subtitle: "Subtitle of document"
author: "Author name(s)"
date: "`r Sys.Date()`"
### Uncomment the following line if a summary should be shown after the title 
# abstract: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut elit odio. Donec fermentum tellus neque, vitae fringilla orci pretium vitae. Fusce maximus finibus facilisis. Donec ut ullamcorper turpis. Donec ut porta ipsum. Nullam cursus mauris a sapien ornare pulvinar. Aenean malesuada molestie erat quis mattis. Praesent scelerisque posuere faucibus."
### Uncomment the following line if the document language is German
# language: custom_lang.yml
### Comment or remove the following two lines if NO references are used
bibliography: [bib/references.bib, bib/packages.bib] # Path to bibliography files 
csl: bib/sage-harvard.csl                            # Path to reference style file
### Settings for rendering the document:
format: 
  pdf:
    documentclass: scrartcl  
    geometry:   
      - top=25mm     # margin settings
      - bottom=20mm
      - left=25mm
      - right=25mm
      - heightrounded
    include-in-header:
      - styles/in-header.tex 
    toc: false
    toc-depth: 3
    toc-title: Contents       # remove line or adjust if language is German
    number-sections: true
    number-depth: 3
    lof: false  # list of figures
    lot: false  # list of tables
    colorlinks: true
    crossref: 
      chapters: false     # set to 'true' if figure numbering should follow subsections
      fig-prefix: Fig.    # (default is 'Figure'; adjust if language is German)
    # Code options:
    highlight-style: arrow # default 
execute:
  echo: false
  warning: false
  message: false
fig-align: center
editor: source
---

```{r}
#| label: load-packages
#| include: false
# Load all your packages that you need later
library(knitr)
```

```{r}
#| label: generate-package-refs
#| include: false
# Automatically create a bib database for R packages used above
knitr::write_bib(
  x = c(.packages(), 'rmarkdown', 'UHHformats',
    # Add here now all packages that are loaded above:
    'knitr'), 
  file = 'bib/packages.bib')
```

# Introduction

## YAML header

Configure the YAML header including the following elements:

- `title`: Title
- `subtitle`: Subtitle; remove option completely if you don't need a subtitle.
- `author`: Character of single or multiple author(s)
- `date`: A date
- `abstract`: The abstract will be shown right after the title in smaller font size. 
- `language`: If language is NOT English refer to th file `custom_lang.yml` for automatic text in German. If the document language is another one, adjust this file.
- `bibliography`: A path to the bibliography file to use for references (BibTeX `.bib` file). The current file includes 3 dummy references; either insert your references into this file or replace the file with your own.
- `csl`: The style is provided in the 'sage-harvard.csl' file, which adopts the [SAGE Harvard](https://uk.sagepub.com/sites/default/files/sage_harvard_reference_style_0.pdf) reference style. Just leave the file as it is.
- `format - pdf`: In this template many of the Quarto options for PDF output are listed in the YAML header. If you want to know more about these settings I recommend the [PDF format reference](https://quarto.org/docs/reference/formats/pdf.html) for a complete list of available options. For instance, you can adjust the figure and table references with `fig-title`, `tbl-title`, `fig-prefix`, and `tbl-prefix`.
- `execute`: Global options for customizing output from executed code are specified within this execute key.
- `fig-align`: Global settings for figure positioning. For other settings see the [PDF format reference](https://quarto.org/docs/reference/formats/pdf.html).

The default font for this template is 'Helvetica' but can be replaced with the University's own font style 'TheSansUHH'. If you are associated with the UHH you are allowed to use this font. You can choose the font in the template when running the function, e.g., `UHHformats::create_quarto_doc(dirname = "pdf_simple_doc", template = "pdf_simple", font = "TheSansUHH")`.


## Code blocks

Code blocks in Quarto documents are treated in similar way as in Markdown documents. One important difference is that code chunk options (in Quarto also called 'cell level options') are typically included in special comments using `#|` at the top of code chunks rather than within the line that begins the chunk:

```{r}
#| eval: false
summary(cars)
```

Please note that individual words are separated with a hyphen, not a dot, followed by a colon, not an equal sign as in R Markdown documents. Quarto uses this approach to both better accommodate longer options like `fig-cap`, `fig-subcap`, and `fig-alt` as well as to make it straightforward to edit chunk options within more structured editors that donâ€™t have an easy way to edit chunk metadata (e.g. most traditional notebook UIs).

However, if you prefer it is still possible to include chunk options on the first line (e.g. ```{r, echo = FALSE}) as in R Markdown documents.


## Callout blocks

Quarto provides five different types of callouts that are an excellent way to draw extra attention to certain concepts.

::: callout-note
The color and icon will be different depending upon the type that you select. You can choose between: `note`, `warning`, `important`, `tip`, and `caution`.
:::

::: callout-tip
## Tip With Caption

This is an example of a callout with a caption.
:::


# Methods

## Cross-references

External images and R figures can be referenced with `@fig-label`, where 'label' is the name of the code chunk. These label names should not contain underscores to separate words, use hyphens here instead. Note that figures need to have a caption to be numbered and for cross-referencing, The caption is also set in the chunk option with `#| fig-cap: "Your caption"`.

Tables require similarly a label and table caption for cross-referencing. But here, the cross-reference contains the prefix 'tbl': `@tbl-label`.

Cross-references to individual sections can simply be made with the prefix 'sec' and by adding a '{#sec-identifier}' to any heading.

This is for example a cross-reference to @tbl-kable in @sec-tables and a cross-reference to @fig-base in @sec-figures.

To create a reference-able code block, add a #lst-identifier along with a lst-cap attribute inside the curly braces (see code chunk example @lst-codeblock). Note that the indication of the programming language requires for this static code block a dot set before the 'r'.

``` {.r #lst-codeblock lst-cap="Example for a referenceable code block"}
4+4
```


## Mathematical equations

Use mathematics as usual with the dollar sign `$` at the beginning and end of the equation; either in **inline mode** with one dollar sign such as $E = mc^2$ or in **display mode** with two dollar signs: $$E = mc^2$$

Important to note: do not leave a space between the '\$' and your mathematical notation.

Alternatively, you can use LaTeX for more control and when equations are more complicated. LaTeX equations are also automatically numbered if you define a label within the equation environment, which is useful if you have many equations and want to cross-reference them. The equation label needs to be written with '#eq:label' before the end of the equation (see @eq-mean):

$$
  \bar{X} = \frac{\sum_{i=1}^n X_i}{n}
$$ {#eq-mean}

Formulas and corresponding explanations should be integrated into the sentence and, thus, end with a comma or period. Here comes an example:

If the random variable $Y$ follows a standard normal distribution, i.e. $Y \sim N(0,1)$, it's density function can be described with

$$
f_{Y}(y)=\varphi(y) \stackrel{\mathrm{def}}{=} \frac{1}{\sqrt{2 \pi}} \exp \left\{ -\frac{y^2}{2} \right\}, \quad y \in \mathbb{R}.
$$ {#eq-density-norm}

$\pi$ represents the circle number or Ludolph's number. The function

$$
  F_{Y}(y)=\Phi(y) \stackrel{\mathrm{def}}{=} \int_{-\infty}^y \varphi(x) \,\mathrm{d}x, \quad y \in \mathbb{R}
$$ {#eq-dist-func}


represents then the distribution function of @eq-density-norm.

The numbering of equations, as in @eq-density-norm, should only be done if they are referred to in the rest of the text. Especially if there are many equations in the thesis, the use of LaTeX seems to make more sense.


## Images

Quarto includes several features aimed at making it easier to work with figures and subfigures, as well as for laying out panels that contain multiple figures, tables, or other content.

[![Single image of Iris setosa with URL link but no cross-reference.](images/wikipedia_iris_setosa.jpg)](https://en.wikipedia.org/wiki/Iris_setosa){fig-align="left" fig-alt="Wikipedia image of Iris setosa."}

For instance, if you have several figures that appear as a group, you can create a figure div to enclose them (see @fig-versicolor and @fig-virginica).

::: {layout-ncol=2 layout-valign="bottom"}

![Iris versicolor](images/wikipedia_iris_versicolor.jpg){#fig-versicolor}

![Iris virginica](images/wikipedia_iris_virginica.jpg){#fig-virginica}

:::

The layout attribute enables the creation of much more complex layouts. @fig-custom-layout provides an example with a common figure caption and one identifier for all three.

::: {#fig-custom-layout layout="[20,-2,46,-2,30]" layout-valign="bottom"}

![Iris setosa](images/wikipedia_iris_setosa.jpg)

![Iris versicolor](images/wikipedia_iris_versicolor.jpg)

![Iris virginica](images/wikipedia_iris_virginica.jpg)

Custom layout of images
:::


<!-- This will start a new page (LaTeX code) -->
\newpage


# Results

## R output

R output is typically shown in the monospace font (here an example with the `mtcars` dataset in the subfolder `data/`):

```{r}
# Import dataset from the data/ folder
mtcars <- read.csv("data/mtcars.csv")
summary(mtcars[,1:4])
```


## Tables {#sec-tables}

Here is a simple table based on Markdown Syntax (@tbl-markdown).

| A            | New              | Table          |
|:-------------|:----------------:|---------------:|
|left-aligned  |center-aligned    |right-aligned   |
|$123          |$456              |$789            |
|*italics*     |~~strikethrough~~ |**boldface**    |

: My Caption {#tbl-markdown}


### Using the *knitr* package

@tbl-kable is an example of using `knitr::kable()` to generate the table.

```{r}
#| label: tbl-kable
#| tbl-cap: "This is a table produced with knitr::kable()."
# Plot only a subset of the data
df <- mtcars[1:5, 1:6]
knitr::kable(
  df,
  longtable = TRUE,
  booktabs = TRUE
)
# (the last two options make the table a bit more readable)
```


### The *xtable* package

Another useful package for tables for PDF output is [xtable](https://cran.r-project.org/web/packages/xtable/vignettes/xtableGallery.pdf). The following code will produce an example table if the *xtable* package is installed. Note that you need to add the chunk option `results = "asis"` inside `{r}` otherwise the PDF will contain the \LaTeX code of the table!

```{r}
#| label: tbl-xtable
#| tbl-cap: "A table made with xtable."
#| eval: !expr ifelse(nzchar(system.file(package = "xtable")), "true", "false")
#| results: "asis"
xt <- xtable::xtable(df)
print(xt, comment = FALSE, caption.placement = "top", booktabs = TRUE)
```


## Figures {#sec-figures}

A base graphics scatterplot (@fig-base).

```{r}
#| label: fig-base
#| fig-cap: "Relationship between horsepower and fuel economy."
plot(mtcars$hp, mtcars$mpg,
xlab = "Gross Horsepower",
ylab = "Miles Per Gallon",
pch = 19)
abline(lm(mpg ~ hp, data = mtcars), col = "red")
```

Here for comparison a boxplot with a different image height (@fig-boxplot).

```{r}
#| label: fig-boxplot
#| fig-cap: "Fuel differences between transmission types (0 = automatic, 1 = manual)."
#| fig-height: 3
#| fig-width: 3
boxplot(mpg ~ am, mtcars)
```


## Diagrams

Quarto has native support for embedding *Mermaid* and *Graphviz* diagrams. This enables you to create flowcharts, sequence diagrams, state diagrams, gnatt charts, and more using a plain text syntax inspired by markdown.

### Mermaid

Mermaid is a Javascript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams (see @fig-mermaid-diagram).

```{mermaid}
%%| label: fig-mermaid-diagram
%%| fig-cap: Simple flowchart based on the JS-tool Mermaid.
%%| fig-width: 6
flowchart LR
  A[Hard edge] --> B(Round edge)
  B --> C{Decision}
  C --> D[Result one]
  C --> E[Result two]
  style C fill:#f9f,stroke:#333,stroke-width:4px
  style E fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5 5
```

::: callout-note
Cell level options are here indicated with `%%|` instead of `#|`!
:::

Useful links:

- [https://mermaid-js.github.io/mermaid/#/](https://mermaid-js.github.io/mermaid/#/)
- [https://mermaid.live](https://mermaid.live)


### Graphviz

The [Graphviz](https://graphviz.org/) layout programs take descriptions of graphs in a simple text language and make diagrams in useful formats. Graphviz has many useful features for concrete diagrams, such as options for colors, fonts, tabular node layouts, line styles, hyperlinks, and custom shapes (see @fig-dot-diagram).

```{dot}
//| label: fig-dot-diagram
//| fig-cap: "An example for a diagram made with Graphviz."

graph G {
  layout=neato
  run -- intr;
  intr -- runbl;
  runbl -- run;
  run -- kernel;
  kernel -- zombie;
  kernel -- sleep;
  kernel -- runmem;
  sleep -- swap;
  swap -- runswap;
  runswap -- new;
  runswap -- runmem;
  new -- runmem;
  sleep -- runmem;
}
```

::: callout-note
Cell level options are here indicated with `//|`!
:::


# Adding citations and bibliography

Link a `.bib` document via the YAML header, and the bibliography will be printed at the end. The default bibliography style is provided in the `sage-harvard.csl` file (do not delete), which adopts the [SAGE Harvard](https://uk.sagepub.com/sites/default/files/sage_harvard_reference_style_0.pdf) reference style.

References can be cited directly within the document using the Quarto equivalent of the \LaTeX citation system `[@key]`, where key is the citation key in the first line of the entry in the .csl file. Example: [@Taylor1937]. To cite multiple entries, separate the keys by semicolons (e.g., [@Knupp1999; @Kamm2000]. You can also write in-text citations, as follows: @Taylor1937 say this and that.

There is also the package [citr](https://github.com/crsh/citr) which I highly recommend: *citr* provides functions and an RStudio add-in to search a BibTeX-file to create and insert formatted Markdown citations into the current document. If you are using the reference manager [Zotero](https://www.zotero.org/) the add-in can access your reference database directly.

## Software

If you want to include a paragraph on the software used, here is some example text/code to get the current R and package versions. The code to create a separate bibliography file named 'packages.bib' with all package references has already been added at the beginning of this script (code chunk 'generate-package-refs').

All analyses were performed using the statistical software R (version `r paste(R.Version()$major, R.Version()$minor, sep = ".")`) [@R-base]. This thesis, including tables, was generated using the R packages 'rmarkdown' (version `r packageVersion("rmarkdown")`) [@R-rmarkdown], 'UHHformats' (version `r packageVersion("UHHformats")`) [@R-UHHformats], and 'knitr' (version `r packageVersion("knitr")`) [@R-knitr].

## Examples for footnotes

Here is a footnote reference[^1], and another[^2].

[^1]: Here is the footnote.

[^2]: Here's one with multiple blocks.

    Subsequent paragraphs are indented to show that they belong to the previous footnote.

        { some.code }

    The whole paragraph can be indented, or just the first line. In this way, multi-paragraph footnotes work like multi-paragraph list items.

\newpage

<!-- Pandoc will automatically generate a list of works cited and place it in the document if the style calls for it. It will be placed in a div with the id refs if one exists: -->

# References

::: {#refs}
:::

# Acknowledgments {.unnumbered .unlisted}

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut elit odio. Donec fermentum tellus neque, vitae fringilla orci pretium vitae. Fusce maximus finibus facilisis. Donec ut ullamcorper turpis.

